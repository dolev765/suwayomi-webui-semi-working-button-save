var f=Object.defineProperty;var m=(t,e,a)=>e in t?f(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var S=(t,e,a)=>m(t,typeof e!="symbol"?e+"":e,a);import{br as E,f as M,Q as v,b as l,R as b,D as g,bq as C,bo as y,t as D,bp as N,u as P,a as U,y as A,m as B,g as T}from"./index-B3NSCdsi.js";const h={savedSearches:void 0,isPinned:!1,isEnabled:!0},O=t=>({...t,savedSearches:t.savedSearches?JSON.stringify(t.savedSearches):void 0}),p=(t,e)=>v("source",{...t,meta:b(t.meta)},h,void 0,e),d=t=>p(t),I=t=>{const e=p(t,l.useEffect);return l.useMemo(()=>e,[t])},R=async(t,e,a)=>E(t,[[e,O({[e]:a})[e]]]),F=(t,e=M())=>(a,r)=>R(t,a,r).catch(e),i=class i{static isLocalSource(e){return e.id===i.LOCAL_SOURCE_ID}static getLanguage(e){return i.isLocalSource(e)?g.OTHER:e.lang}static getLanguages(e){return[...new Set(e.map(i.getLanguage))]}static groupByLanguage(e){const a=Object.groupBy(e,n=>d(n).isPinned?g.PINNED:i.getLanguage(n)),o=Object.entries(a).toSorted(([n],[c])=>{const u=n===g.PINNED,s=c===g.PINNED;return u?-1:s?1:C(n,c)}).map(([n,c])=>[n,(c!=null?c:[]).toSorted((u,s)=>u.displayName.localeCompare(s.displayName))]);return Object.fromEntries(o)}static filter(e,{showNsfw:a,languages:r,keepLocalSource:o,pinned:n,enabled:c}={}){const u=y(D(r!=null?r:[]));return e.filter(s=>a===void 0||a||!s.isNsfw||o&&i.isLocalSource(s)).filter(s=>!r||u.includes(N(i.getLanguage(s)))||o&&i.isLocalSource(s)).filter(s=>n===void 0||!n||d(s).isPinned||o&&i.isLocalSource(s)).filter(s=>c===void 0||!c||d(s).isEnabled||o&&i.isLocalSource(s))}static areFromMultipleRepos(e){var r;const a=(r=e.find(o=>!!o.extension.repo))==null?void 0:r.extension.repo;return!a||!e.length?!1:e.some(o=>o.extension.repo!==a&&!i.isLocalSource(o))}static getLastUsedSource(e,a){return a.find(r=>r.id===e)}static useLanguages(){const{t:e}=P(),{settings:{sourceLanguages:a}}=U(),r=A(n=>B(e("global.error.label.failed_to_save_changes",T(n)),"error")),o=l.useCallback(n=>r("sourceLanguages",n),[]);return{languages:a,setLanguages:o}}};S(i,"LOCAL_SOURCE_ID","0");let L=i;export{L as S,R as a,F as c,d as g,I as u};
